name: "Build and Release"

on:
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          
          - platform: "macos-13"
            args: ""
    

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install -g pnpm
          pnpm install
          cd ..

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "openitools"

      # Get current version from Cargo.toml
      - name: Get app version
        id: version
        run: |
          VERSION=$(grep '^version' backend/openitools/Cargo.toml | head -n1 | awk -F\" '{print $2}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # Extract latest changelog section dynamically
      - name: Extract changelog
        id: changelog
        run: |
          VERSION=${{ steps.version.outputs.version }}
          
          sed -n "/^## \[$VERSION\]/,/^## \[/ {
            /^## \[/!p
          }" CHANGELOG.md > RELEASE_BODY.md
          

          echo "body<<EOF" >> $GITHUB_OUTPUT
          cat RELEASE_BODY.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        
      # Build Tauri app and attach assets to release
      - uses: kandrelczyk/tauri-action@feature/bundle-types
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__
          releaseName: "OpeniTools v__VERSION__"
          releaseBody: ${{ steps.changelog.outputs.body }}
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}

